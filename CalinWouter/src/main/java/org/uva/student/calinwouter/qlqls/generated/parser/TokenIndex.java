/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.uva.student.calinwouter.qlqls.generated.parser;

import org.uva.student.calinwouter.qlqls.generated.node.*;
import org.uva.student.calinwouter.qlqls.generated.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTTokenNot(@SuppressWarnings("unused") TTokenNot node)
    {
        this.index = 0;
    }

    @Override
    public void caseTNumber(@SuppressWarnings("unused") TNumber node)
    {
        this.index = 1;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 2;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 3;
    }

    @Override
    public void caseTAdd(@SuppressWarnings("unused") TAdd node)
    {
        this.index = 4;
    }

    @Override
    public void caseTSubtract(@SuppressWarnings("unused") TSubtract node)
    {
        this.index = 5;
    }

    @Override
    public void caseTMultiply(@SuppressWarnings("unused") TMultiply node)
    {
        this.index = 6;
    }

    @Override
    public void caseTDivide(@SuppressWarnings("unused") TDivide node)
    {
        this.index = 7;
    }

    @Override
    public void caseTModulo(@SuppressWarnings("unused") TModulo node)
    {
        this.index = 8;
    }

    @Override
    public void caseTLeftParenthesis(@SuppressWarnings("unused") TLeftParenthesis node)
    {
        this.index = 9;
    }

    @Override
    public void caseTRightParenthesis(@SuppressWarnings("unused") TRightParenthesis node)
    {
        this.index = 10;
    }

    @Override
    public void caseTTokenForm(@SuppressWarnings("unused") TTokenForm node)
    {
        this.index = 11;
    }

    @Override
    public void caseTLeftBrace(@SuppressWarnings("unused") TLeftBrace node)
    {
        this.index = 12;
    }

    @Override
    public void caseTRightBrace(@SuppressWarnings("unused") TRightBrace node)
    {
        this.index = 13;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 14;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 15;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 16;
    }

    @Override
    public void caseTTokenBoolean(@SuppressWarnings("unused") TTokenBoolean node)
    {
        this.index = 17;
    }

    @Override
    public void caseTTokenTrue(@SuppressWarnings("unused") TTokenTrue node)
    {
        this.index = 18;
    }

    @Override
    public void caseTTokenFalse(@SuppressWarnings("unused") TTokenFalse node)
    {
        this.index = 19;
    }

    @Override
    public void caseTTokenString(@SuppressWarnings("unused") TTokenString node)
    {
        this.index = 20;
    }

    @Override
    public void caseTTokenInteger(@SuppressWarnings("unused") TTokenInteger node)
    {
        this.index = 21;
    }

    @Override
    public void caseTString(@SuppressWarnings("unused") TString node)
    {
        this.index = 22;
    }

    @Override
    public void caseTTokenEquals(@SuppressWarnings("unused") TTokenEquals node)
    {
        this.index = 23;
    }

    @Override
    public void caseTTokenNotEquals(@SuppressWarnings("unused") TTokenNotEquals node)
    {
        this.index = 24;
    }

    @Override
    public void caseTTokenLesserThan(@SuppressWarnings("unused") TTokenLesserThan node)
    {
        this.index = 25;
    }

    @Override
    public void caseTTokenGreaterThan(@SuppressWarnings("unused") TTokenGreaterThan node)
    {
        this.index = 26;
    }

    @Override
    public void caseTTokenLesserThanOrEquals(@SuppressWarnings("unused") TTokenLesserThanOrEquals node)
    {
        this.index = 27;
    }

    @Override
    public void caseTTokenGreaterThanOrEquals(@SuppressWarnings("unused") TTokenGreaterThanOrEquals node)
    {
        this.index = 28;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 29;
    }

    @Override
    public void caseTHex(@SuppressWarnings("unused") THex node)
    {
        this.index = 30;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 31;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 32;
    }
}
