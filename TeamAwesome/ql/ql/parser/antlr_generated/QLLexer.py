# Generated from java-escape by ANTLR 4.5
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2%")
        buf.write("\u00ee\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\7\37\u00b6")
        buf.write("\n\37\f\37\16\37\u00b9\13\37\3\37\3\37\3 \3 \3 \3!\5!")
        buf.write("\u00c1\n!\3!\3!\3!\7!\u00c6\n!\f!\16!\u00c9\13!\5!\u00cb")
        buf.write("\n!\3\"\3\"\3\"\6\"\u00d0\n\"\r\"\16\"\u00d1\5\"\u00d4")
        buf.write("\n\"\3#\3#\7#\u00d8\n#\f#\16#\u00db\13#\3$\6$\u00de\n")
        buf.write("$\r$\16$\u00df\3$\3$\3%\3%\3%\3%\7%\u00e8\n%\f%\16%\u00eb")
        buf.write("\13%\3%\3%\2\2&\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23")
        buf.write("\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25")
        buf.write(")\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?\2")
        buf.write("A!C\"E#G$I%\3\2\n\4\2$$^^\n\2$$\61\61^^ddhhppttvv\3\2")
        buf.write("\63;\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\5\2\13\f\17\17")
        buf.write("\"\"\4\2\f\f\17\17\u00f6\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3")
        buf.write("\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2")
        buf.write("\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2")
        buf.write("\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2")
        buf.write("!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2")
        buf.write("\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3")
        buf.write("\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2")
        buf.write("\2=\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\3K\3\2\2\2\5P\3\2\2\2\7R\3\2\2\2\tT\3\2")
        buf.write("\2\2\13]\3\2\2\2\r_\3\2\2\2\17b\3\2\2\2\21j\3\2\2\2\23")
        buf.write("r\3\2\2\2\25y\3\2\2\2\27\177\3\2\2\2\31\u0081\3\2\2\2")
        buf.write("\33\u0083\3\2\2\2\35\u0085\3\2\2\2\37\u0087\3\2\2\2!\u0089")
        buf.write("\3\2\2\2#\u008b\3\2\2\2%\u008d\3\2\2\2\'\u008f\3\2\2\2")
        buf.write(")\u0091\3\2\2\2+\u0093\3\2\2\2-\u0096\3\2\2\2/\u0098\3")
        buf.write("\2\2\2\61\u009b\3\2\2\2\63\u009e\3\2\2\2\65\u00a1\3\2")
        buf.write("\2\2\67\u00a4\3\2\2\29\u00a7\3\2\2\2;\u00ac\3\2\2\2=\u00b2")
        buf.write("\3\2\2\2?\u00bc\3\2\2\2A\u00ca\3\2\2\2C\u00cc\3\2\2\2")
        buf.write("E\u00d5\3\2\2\2G\u00dd\3\2\2\2I\u00e3\3\2\2\2KL\7h\2\2")
        buf.write("LM\7q\2\2MN\7t\2\2NO\7o\2\2O\4\3\2\2\2PQ\7}\2\2Q\6\3\2")
        buf.write("\2\2RS\7\177\2\2S\b\3\2\2\2TU\7s\2\2UV\7w\2\2VW\7g\2\2")
        buf.write("WX\7u\2\2XY\7v\2\2YZ\7k\2\2Z[\7q\2\2[\\\7p\2\2\\\n\3\2")
        buf.write("\2\2]^\7?\2\2^\f\3\2\2\2_`\7k\2\2`a\7h\2\2a\16\3\2\2\2")
        buf.write("bc\7d\2\2cd\7q\2\2de\7q\2\2ef\7n\2\2fg\7g\2\2gh\7c\2\2")
        buf.write("hi\7p\2\2i\20\3\2\2\2jk\7k\2\2kl\7p\2\2lm\7v\2\2mn\7g")
        buf.write("\2\2no\7i\2\2op\7g\2\2pq\7t\2\2q\22\3\2\2\2rs\7u\2\2s")
        buf.write("t\7v\2\2tu\7t\2\2uv\7k\2\2vw\7p\2\2wx\7i\2\2x\24\3\2\2")
        buf.write("\2yz\7o\2\2z{\7q\2\2{|\7p\2\2|}\7g\2\2}~\7{\2\2~\26\3")
        buf.write("\2\2\2\177\u0080\7*\2\2\u0080\30\3\2\2\2\u0081\u0082\7")
        buf.write("+\2\2\u0082\32\3\2\2\2\u0083\u0084\7-\2\2\u0084\34\3\2")
        buf.write("\2\2\u0085\u0086\7/\2\2\u0086\36\3\2\2\2\u0087\u0088\7")
        buf.write("#\2\2\u0088 \3\2\2\2\u0089\u008a\7`\2\2\u008a\"\3\2\2")
        buf.write("\2\u008b\u008c\7,\2\2\u008c$\3\2\2\2\u008d\u008e\7\61")
        buf.write("\2\2\u008e&\3\2\2\2\u008f\u0090\7\'\2\2\u0090(\3\2\2\2")
        buf.write("\u0091\u0092\7>\2\2\u0092*\3\2\2\2\u0093\u0094\7>\2\2")
        buf.write("\u0094\u0095\7?\2\2\u0095,\3\2\2\2\u0096\u0097\7@\2\2")
        buf.write("\u0097.\3\2\2\2\u0098\u0099\7@\2\2\u0099\u009a\7?\2\2")
        buf.write("\u009a\60\3\2\2\2\u009b\u009c\7?\2\2\u009c\u009d\7?\2")
        buf.write("\2\u009d\62\3\2\2\2\u009e\u009f\7#\2\2\u009f\u00a0\7?")
        buf.write("\2\2\u00a0\64\3\2\2\2\u00a1\u00a2\7(\2\2\u00a2\u00a3\7")
        buf.write("(\2\2\u00a3\66\3\2\2\2\u00a4\u00a5\7~\2\2\u00a5\u00a6")
        buf.write("\7~\2\2\u00a68\3\2\2\2\u00a7\u00a8\7v\2\2\u00a8\u00a9")
        buf.write("\7t\2\2\u00a9\u00aa\7w\2\2\u00aa\u00ab\7g\2\2\u00ab:\3")
        buf.write("\2\2\2\u00ac\u00ad\7h\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af")
        buf.write("\7n\2\2\u00af\u00b0\7u\2\2\u00b0\u00b1\7g\2\2\u00b1<\3")
        buf.write("\2\2\2\u00b2\u00b7\7$\2\2\u00b3\u00b6\5? \2\u00b4\u00b6")
        buf.write("\n\2\2\2\u00b5\u00b3\3\2\2\2\u00b5\u00b4\3\2\2\2\u00b6")
        buf.write("\u00b9\3\2\2\2\u00b7\u00b5\3\2\2\2\u00b7\u00b8\3\2\2\2")
        buf.write("\u00b8\u00ba\3\2\2\2\u00b9\u00b7\3\2\2\2\u00ba\u00bb\7")
        buf.write("$\2\2\u00bb>\3\2\2\2\u00bc\u00bd\7^\2\2\u00bd\u00be\t")
        buf.write("\3\2\2\u00be@\3\2\2\2\u00bf\u00c1\7/\2\2\u00c0\u00bf\3")
        buf.write("\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00c2\3\2\2\2\u00c2\u00cb")
        buf.write("\7\62\2\2\u00c3\u00c7\t\4\2\2\u00c4\u00c6\t\5\2\2\u00c5")
        buf.write("\u00c4\3\2\2\2\u00c6\u00c9\3\2\2\2\u00c7\u00c5\3\2\2\2")
        buf.write("\u00c7\u00c8\3\2\2\2\u00c8\u00cb\3\2\2\2\u00c9\u00c7\3")
        buf.write("\2\2\2\u00ca\u00c0\3\2\2\2\u00ca\u00c3\3\2\2\2\u00cbB")
        buf.write("\3\2\2\2\u00cc\u00d3\5A!\2\u00cd\u00cf\7\60\2\2\u00ce")
        buf.write("\u00d0\t\5\2\2\u00cf\u00ce\3\2\2\2\u00d0\u00d1\3\2\2\2")
        buf.write("\u00d1\u00cf\3\2\2\2\u00d1\u00d2\3\2\2\2\u00d2\u00d4\3")
        buf.write("\2\2\2\u00d3\u00cd\3\2\2\2\u00d3\u00d4\3\2\2\2\u00d4D")
        buf.write("\3\2\2\2\u00d5\u00d9\t\6\2\2\u00d6\u00d8\t\7\2\2\u00d7")
        buf.write("\u00d6\3\2\2\2\u00d8\u00db\3\2\2\2\u00d9\u00d7\3\2\2\2")
        buf.write("\u00d9\u00da\3\2\2\2\u00daF\3\2\2\2\u00db\u00d9\3\2\2")
        buf.write("\2\u00dc\u00de\t\b\2\2\u00dd\u00dc\3\2\2\2\u00de\u00df")
        buf.write("\3\2\2\2\u00df\u00dd\3\2\2\2\u00df\u00e0\3\2\2\2\u00e0")
        buf.write("\u00e1\3\2\2\2\u00e1\u00e2\b$\2\2\u00e2H\3\2\2\2\u00e3")
        buf.write("\u00e4\7\61\2\2\u00e4\u00e5\7\61\2\2\u00e5\u00e9\3\2\2")
        buf.write("\2\u00e6\u00e8\n\t\2\2\u00e7\u00e6\3\2\2\2\u00e8\u00eb")
        buf.write("\3\2\2\2\u00e9\u00e7\3\2\2\2\u00e9\u00ea\3\2\2\2\u00ea")
        buf.write("\u00ec\3\2\2\2\u00eb\u00e9\3\2\2\2\u00ec\u00ed\b%\2\2")
        buf.write("\u00edJ\3\2\2\2\r\2\u00b5\u00b7\u00c0\u00c7\u00ca\u00d1")
        buf.write("\u00d3\u00d9\u00df\u00e9\3\b\2\2")
        return buf.getvalue()


class QLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    STRING = 30
    INTEGER = 31
    MONEY = 32
    IDENTIFIER = 33
    WS = 34
    COMMENT = 35

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            "'form'", "'{'", "'}'", "'question'", "'='", "'if'", "'boolean'", 
            "'integer'", "'string'", "'money'", "'('", "')'", "'+'", "'-'", 
            "'!'", "'^'", "'*'", "'/'", "'%'", "'<'", "'<='", "'>'", "'>='", 
            "'=='", "'!='", "'&&'", "'||'", "'true'", "'false'" ]

    symbolicNames = [ u"<INVALID>",
            "STRING", "INTEGER", "MONEY", "IDENTIFIER", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "STRING", "ESC", "INTEGER", 
                  "MONEY", "IDENTIFIER", "WS", "COMMENT" ]

    grammarFileName = "QL.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


